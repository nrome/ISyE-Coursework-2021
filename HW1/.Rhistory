hospitalAgeVector <- c(23, 24, 26, 27, 35, 42, 45, 49, 50, 52, 56, 56, 57, 59, 60, 61, 63, 64)
hospitalFatVector <- c(10.1, 26.4, 7.3, 18.4, 32.6, 24.5, 28.6, 27.2, 31.5, 35.4, 41.9, 27.6, 31.0, 30.7, 35.6, 42.1, 37.5, 36.8)
df <- data.frame(hospitalAgeVector, hospitalFatVector)
print(df)
#   Compute Age Mean
result.mean <- mean(hospitalAgeVector)
print(result.mean) #    29.81481
#   Compute Age Median
median.result <- median(hospitalAgeVector)
print(median.result) #  25
#   Compute Age Standard Deviation
> sd.result = sqrt(var(hospitalAgeVector))
#   Compute Age Standard Deviation
sd.result = sqrt(var(hospitalAgeVector))
print (sd.result)
#   Compute Fat Mean
result.mean <- mean(hospitalFatVector)
print(result.mean) #    47.16667
#   Compute Fat Median
median.result <- median(hospitalFatVector)
print(median.result) #    51
#   Compute Fat Standard Deviation
sd.result = sqrt(var(hospitalFatVector))
print (sd.result) #    14.29212
boxplot(hospitalAgeVector)
boxplot(hospitalFatVector)
boxplot(hospitalAgeVector)
#   Simple/obvious correlation between increased testing and positive cases in NC
df %>%
select(hospitalAgeVector, hospitalFatVector) %>%
plot(
main = "Scatterplot correlation between NC Daily PCR Test Result Increase and Daily Positive Case Increase",
xlab = "Daily Test Result Increase",
ylab = "Daily Positives Reported Increase"
)
pacman::p_load(pacman, ggplot2)
#   Simple/obvious correlation between increased testing and positive cases in NC
df %>%
select(hospitalAgeVector, hospitalFatVector) %>%
plot(
main = "Scatterplot correlation between NC Daily PCR Test Result Increase and Daily Positive Case Increase",
xlab = "Daily Test Result Increase",
ylab = "Daily Positives Reported Increase"
)
pacman::p_load(pacman, dplyr, ggplot2, forecast, scico, rio, tidyverse, tidyr)
#   Simple/obvious correlation between increased testing and positive cases in NC
df %>%
select(hospitalAgeVector, hospitalFatVector) %>%
plot(
main = "Scatterplot correlation between NC Daily PCR Test Result Increase and Daily Positive Case Increase",
xlab = "Daily Test Result Increase",
ylab = "Daily Positives Reported Increase"
)
pacman::p_load(pacman, ggplot2, tidyverse)
#   Simple/obvious correlation between increased testing and positive cases in NC
df %>%
select(hospitalAgeVector, hospitalFatVector) %>%
plot(
main = "Scatterplot correlation between NC Daily PCR Test Result Increase and Daily Positive Case Increase",
xlab = "Daily Test Result Increase",
ylab = "Daily Positives Reported Increase"
)
#   Clean environment
rm(list = ls())
pacman::p_load(pacman, ggplot2, tidyverse)
#   Simple/obvious correlation between increased testing and positive cases in NC
df %>%
select(hospitalAgeVector, hospitalFatVector) %>%
plot(
main = "Scatterplot correlation between NC Daily PCR Test Result Increase and Daily Positive Case Increase",
xlab = "Daily Test Result Increase",
ylab = "Daily Positives Reported Increase"
)
#   Clean environment
rm(list = ls())
#   Uninstall packages
p_unload(all)
#   Remove plots
dev.off()  # do only if a plot exists
#   Clear the console
cat("\014")   # command shortcut ctrl+L
pacman::p_load(pacman, ggplot2, tidyverse)
hospitalAgeVector <- c(23, 24, 26, 27, 35, 42, 45, 49, 50, 52, 56, 56, 57, 59, 60, 61, 63, 64)
hospitalFatVector <- c(10.1, 26.4, 7.3, 18.4, 32.6, 24.5, 28.6, 27.2, 31.5, 35.4, 41.9, 27.6, 31.0, 30.7, 35.6, 42.1, 37.5, 36.8)
#   Simple/obvious correlation between increased testing and positive cases in NC
df %>%
select(hospitalAgeVector, hospitalFatVector) %>%
plot(
main = "Scatterplot correlation between NC Daily PCR Test Result Increase and Daily Positive Case Increase",
xlab = "Daily Test Result Increase",
ylab = "Daily Positives Reported Increase"
)
#   Load packages with pacman
#   classInt: bin depth or width,
pacman::p_load(pacman, classInt)
#   Create vector one dimension
p1_testScoreVector <- c(74, 68, 84, 80, 56, 64, 40, 47, 78, 71, 95, 50)
#   Equal width binning
p1_classIntervals(p1_testScoreVector, 4)
#   Equal width binning
classIntervals(p1_testScoreVector, 4)
p1_equalWidth <- classIntervals(p1_testScoreVector, 4, style = 'equal')
inspect(p1_equalWidth)
print(p1_equalWidth)
#   Equal frequency binning
p1_equalFrequency <- classIntervals(p1_testScoreVector, 4, style = 'quantile')
print(p1_equalFrequency)
#   Clear the console
cat("\014")   # command shortcut ctrl+L
#   Clean environment
rm(list = ls())
#   Clear the console
cat("\014")   # command shortcut ctrl+L
#   Create vector - one dimension
p1_testScoreVector <- c(74, 68, 84, 80, 56, 64, 40, 47, 78, 71, 95, 50)
classIntervals(p1_testScoreVector, 4)
#   Equal width binning
p1_equalWidth <- classIntervals(p1_testScoreVector, 4, style = 'equal')
print(p1_equalFrequency)
print(p1_equalWidth)
#   Equal frequency binning
p1_equalFrequency <- classIntervals(p1_testScoreVector, 4, style = 'quantile')
#   Clear the console
cat("\014")   # command shortcut ctrl+L
print(p1_equalWidth)
print(p1_equalFrequency)
?classIntervals
sum(bin_1) / 3
#   Split BINs of 3 w/ Smoothing
bin_1 <- c(74, 68, 84)  # 14.33333
bin_2 <- c(80, 56, 64)  # 18.33333
bin_3 <- c(40, 47, 78)  # 21
bin_4 <- c(71, 95, 50)  # 23.33333
sum(bin_1) / 3
sum(bin_2) / 3
sum(bin_3) / 3
sum(bin_4) / 3
